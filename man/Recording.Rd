% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gg_record.R
\name{gg_record}
\alias{gg_record}
\alias{gg_playback}
\alias{gg_resize_film}
\alias{gg_stop_recording}
\title{Record and generate plot histories}
\usage{
gg_record(
  dir = NULL,
  device = c("png", "pdf", "jpeg", "bmp", "tiff", "emf", "svg", "eps", "ps"),
  scale = 1,
  width = NA,
  height = NA,
  units = c("in", "cm", "mm"),
  dpi = 300,
  limitsize = TRUE,
  device_ext = derive_ext(device)
)

gg_playback(
  name = NULL,
  first_image_duration = 16,
  last_image_duration = 20,
  frame_duration = 0.25,
  loop = TRUE,
  image_resize = 600,
  background = "black",
  width = NULL,
  height = NULL,
  progress = interactive(),
  playback = TRUE,
  stoprecording = TRUE
)

gg_resize_film(height = NA, width = NA, units = NA, dpi = NA)

gg_stop_recording()
}
\arguments{
\item{dir}{directory to save the intermediate plots in}

\item{device}{Device to use. Can either be a device function
(e.g. \code{\link[=png]{png()}}), or one of "eps", "ps", "tex" (pictex),
"pdf", "jpeg", "tiff", "png", "bmp", "svg" or "wmf" (windows only).}

\item{scale}{Multiplicative scaling factor.}

\item{width}{Plot size in \code{units} ("in", "cm", or "mm").
If not supplied, uses the size of current graphics device.}

\item{height}{Plot size in \code{units} ("in", "cm", or "mm").
If not supplied, uses the size of current graphics device.}

\item{units}{Plot size in \code{units} ("in", "cm", or "mm").
If not supplied, uses the size of current graphics device.}

\item{dpi}{Plot resolution. Also accepts a string input: "retina" (320),
"print" (300), or "screen" (72). Applies only to raster output types.}

\item{limitsize}{When \code{TRUE} (the default), \code{ggsave} will not
save images larger than 50x50 inches, to prevent the common error of
specifying dimensions in pixels.}

\item{device_ext}{extension to use for images created}

\item{name}{name of gif}

\item{first_image_duration}{n units of frame_duration to show the last image for}

\item{last_image_duration}{n units of frame_duration to show the last image for}

\item{frame_duration}{n seconds each plot should be shown}

\item{loop}{should the gif play forever (FALSE to only play once)}

\item{image_resize}{size to rescale images to in pixels}

\item{background}{color to set the background. A valid color string such as "navyblue" or
"#000080". Use "none" for transparancy.}

\item{progress}{show progress bar}

\item{playback}{Boolean, should the recording start playing after it is
turned into a gif? defaults to TRUE}

\item{stoprecording}{Boolean, should the plots stop being recorded?
defaults to TRUE.}
}
\value{
Used initialize recording, nothing returned

Returns nothing. Used to generate the gif.

Returns the last plot generated, resized to new dimensions

Returns nothing. used for side effect.
}
\description{
Record plots created over time and generate a gif of the plots
   made in the R session.

resize the film for recording, reprints and saves last plot

Stop recording images with {camcorder}.
}
\section{Functions}{
\itemize{
\item \code{gg_playback}: 

\item \code{gg_resize_film}: 

\item \code{gg_stop_recording}: 
}}

\examples{
 if(require(ggplot2) & interactive()){
  gg_record(dir = file.path(tempdir(),"recording"))
  ggplot(data.frame(x = 1, y = 1), aes(x=x, y=y)) + geom_point() + ylim(0,4)
  ggplot(data.frame(x = 1, y = 2), aes(x=x, y=y)) + geom_point() + ylim(0,4)

  ## resize canvas of the last plot
  gg_resize_film(height = 10, width = 5, dpi = 350)

  ggplot(data.frame(x = 1, y = 3), aes(x=x, y=y)) + geom_point() + ylim(0,4)

  gg_playback(tempfile(fileext = ".gif"))
}

}
